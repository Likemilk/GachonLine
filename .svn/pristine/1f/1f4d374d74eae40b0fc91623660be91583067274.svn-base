package com.myspring.gachon.community.controller;

import java.util.Locale;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpSession;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.ServletRequestBindingException;
import org.springframework.web.bind.ServletRequestUtils;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.ResponseBody;

import com.myspring.gachon.community.service.CommunityService;
import com.myspring.gachon.community.service.CommunityServiceImpl;
import com.myspring.gachon.community.vo.CommunityNormalContentVO;
import com.myspring.gachon.community.vo.CommunityNormalListVO;
import com.myspring.gachon.content.ContentKey;
import com.myspring.gachon.course.vo.ChangeCourseVO;

import net.sf.json.JSONArray;
import net.sf.json.JSONObject;

@Controller
public class CommunityController {
	private @Autowired HttpServletRequest request;
	private @Autowired HttpSession session;
	private @Autowired CommunityService communityService;
	
	private static final Logger logger = LoggerFactory.getLogger(CommunityController.class);

	//Default 를 컨트롤러에서 제어하는것이아니라 jsp 페이지에서 session에서 값을 불러서 오는 방식으로.
	@RequestMapping(value = "/community", method = RequestMethod.GET)
	public String communityChange(Model model, Locale locale) throws ServletRequestBindingException {
		String divs = ServletRequestUtils.getStringParameter(request, "divs");
		model.addAttribute("divs",divs);
		logger.info("communityController divs 값 = ["+divs+"]", locale);
		return "/community/Community";
	}
	
	@RequestMapping(value = "/communityList.json", method = RequestMethod.POST)
	@ResponseBody
	public JSONArray communityJSONContent(String divs){
		return communityService.getBoardList(divs);
	}
	
	@RequestMapping(value = "/community/write", method = RequestMethod.POST)
	public String communityWritePage(Model model,Locale locale) throws ServletRequestBindingException{
		String divs = ServletRequestUtils.getStringParameter(request, "divs");
		model.addAttribute("divs",divs);
		logger.info("communityController divs 값 = ["+divs+"]", locale);
		return "/community/Write";
	}
	
	@RequestMapping(value = "/community/write/submit", method = RequestMethod.POST)
	public String communityWriteSubmit(CommunityNormalListVO list,CommunityNormalContentVO content,Model model,Locale locale) throws ServletRequestBindingException{
		String divs = ServletRequestUtils.getStringParameter(request, "divs");
		model.addAttribute("divs",divs);
		//서버단에서 작성글의 검증은 귀찮아서 패스 . 클라에서 대충 검증하고 넘길꺼임.
		JSONObject userData = (JSONObject)request.getSession().getAttribute(ContentKey.LOGIN_MEMBER);
		
		content.setCreateUser(userData.getString("memberName"));
		content.setUpdateUser(userData.getString("memberName"));
		list.setCreateUser(userData.getString("memberName"));
		list.setUpdateUser(userData.getString("memberName"));
		list.setType(divs);
		
		
		logger.info("communityController divs 값 = ["+divs+"]", locale);
		System.err.println(list.toString());
		System.err.println(content.toString());
		System.err.println(list);
		System.err.println(content);
		
		JSONObject result = communityService.setWriteSubmit(list,content);
		if(result.getString(ContentKey.RESULT_MSG).equals(ContentKey.RESULT_SUCCESS)){
			return "/community/Community";
		}else{
			JSONObject data = new JSONObject();
			data.put("LIST", list);
			data.put("CONTENT", content);
			model.addAttribute("DATA",data);
			model.addAttribute(ContentKey.RESULT_MSG,ContentKey.RESULT_FAIL);
			return "/community/Write";
		}
	}
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	@RequestMapping(value = "/community/content", method = RequestMethod.GET)
	public String communityContent(Model model,Locale locale) throws ServletRequestBindingException{
		String divs = ServletRequestUtils.getStringParameter(request, "divs");
		model.addAttribute("divs",divs);
		logger.info("communityController divs 값 = ["+divs+"]", locale);
		return "/community/Community";
	}
	
	@RequestMapping(value = "/community/delete", method = RequestMethod.GET)
	public String communityDelete(Model model,Locale locale) throws ServletRequestBindingException{
		String divs = ServletRequestUtils.getStringParameter(request, "divs");
		model.addAttribute("divs",divs);
		logger.info("communityController divs 값 = ["+divs+"]", locale);
		return "/community/Community";
	}

	@RequestMapping(value = "/community/submit", method = RequestMethod.GET)
	public String communitySubmit(Model model,Locale locale) throws ServletRequestBindingException{
		String divs = ServletRequestUtils.getStringParameter(request, "divs");
		model.addAttribute("divs",divs);
		logger.info("communityController divs 값 = ["+divs+"]", locale);
		return "/community/Community";
	}
	

	
	
	
	@RequestMapping(value = "/community/modify", method = RequestMethod.GET)
	public String communityModify(Model model,Locale locale) throws ServletRequestBindingException{
		String divs = ServletRequestUtils.getStringParameter(request, "divs");
		model.addAttribute("divs",divs);
		logger.info("communityController divs 값 = ["+divs+"]", locale);
		
		return "/community/Write";
	}
	
}
